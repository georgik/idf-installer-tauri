name: "build-installer"
  workflow_dispatch:
    inputs:
      upload_artifacts:
        description: 'Upload final artifacts to Release?'
        required: true
        default: 'yes'

jobs:
  get_release:
    # https://github.com/octokit/request-action
    name: Get release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.get_upload_url.outputs.url }}
    steps:
    - uses: octokit/request-action@v2.x
      id: get_latest_release
      with:
        route: GET /repos/{owner}/{repo}/releases/latest
        owner: esp-rs
        repo: rust-build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: get upload url
      id: get_upload_url
      run: |
        url=$(echo "$response" | jq -r '.upload_url')
        echo "::set-output name=url::$url"
      env:
        response:  ${{ steps.get_latest_release.outputs.data }}

  build-tauri:
    needs: get_release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
        include:
        - os: macos-latest
          ASSET_PATH: 'target/release/idf-installer-tauri'
          ASSET_NAME: 'idf-installer-tauri.apple'
          ASSET_CONTENT_TYPE: 'application/octet-stream'
        - os: ubuntu-latest
          ASSET_PATH: 'target/release/idf-installer-tauri'
          ASSET_NAME: 'idf-installer-tauri.linux'
          ASSET_CONTENT_TYPE: 'application/octet-stream'
        - os: macos-latest
          ASSET_PATH: 'target/release/idf-installer-tauri.exe'
          ASSET_NAME: 'idf-installer-tauri.windows.exe'
          ASSET_CONTENT_TYPE: 'application/octet-stream'
    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      - name: install app dependencies
        run: yarn && yarn build
      - name: build the app - Rust part
        run: yarn tauri:build
      - name: Upload Release Asset
        if: github.event.inputs.upload_artifacts == 'yes'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.get_release.outputs.upload_url }}
          asset_path: ${{ matrix.ASSET_PATH }}
          asset_name: ${{ matrix.ASSET_NAME }}
          asset_content_type: ${{ matrix.ASSET_CONTENT_TYPE }}
